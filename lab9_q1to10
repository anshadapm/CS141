Question 1.
        (1).S
        (2).T
        (3).6940
        (4).S
        (5).9772
Question 2.
        D.*p=75
Question 3.
        c is a charecter element.So only charecter pointer can point c.Here p is defined as double pointer.

Question 4.
   int main(
   {
   char blocks[3] = {'A','B','C'};
   char *ptr = &blocks[0];
   char temp;

   temp = blocks[0]; 		//A
   temp = *(blocks + 2);	//C
   temp = *(ptr + 1);		//B
   temp = *ptr;				//A

   ptr = blocks + 1;		//4435
   temp = *ptr;             //B
   temp = *(ptr + 1);		//C

   ptr = blocks;			//4434
   temp = *++ptr;			//C
   temp = ++*ptr;			//E
   temp = *ptr++;			//
   temp = *ptr;				//

   return 0;
   }
Question 5.
    for(int i=4;i>=0;i--){cout<<*(s+i);}
Question 6.
    #include<iostream>
    using namespace std;
    int countEven(int*arr){
      int n=0;
      for (int i = 0; i < k; i++)
        if (arr[i] % 2 == 0)
           n++; 
        return n;
    }

    int main()
    {
     int arr[]={0,1,2,3,4,5,6,7,8,9},n;
     n=countEven(arr);
     cout<<"no of even entries is "<<n<<endl;
     return 0;
    }
Question 7.
    #include<iostream>
using namespace std;
//function to find largest
double maximum(double arr[],int n){
            int i;
            double *p=arr;
            for(int i=0;i<n;i++){
                   if(arr[0]<arr[i]){
			arr[0]=arr[i];	
                   } 
            }
           cout<<"largest element is "<<c<<endl;
           return 0;
           
                              }
int main()
 {
 int i,n;
 //asking no of elements
 cout<<"enter total no of elements";
 cin>>n;
  
 double arr[n],c;
 //declare array
 for(int i=0;i<n;i++){
                   //to take values of array
                   cout<<"enter an element:"<<i<<endl;
                   cin>>arr[i];
                     }
  maximum(arr,n);
return 0; 
  }


Question 8.
      #include <iostream>
using namespace std;

int myStrLen(char str[]){
   for(int i=0;i<20;i++){
             if(str[i]=='\0'){
                              return i; 
                         }
                }
   }

int main(){ 
 char str[20];
 cout<<"enter a string\n"; 
 cin>>str;
 int n=myStrLen(str);
 cout<<"length of the string is "<<n<<endl;
 return 0;
}

Question 9.
#include<iostream> 
#include<cstring> 
using namespace std; 
  
// Returns true if str1[] is a subsequence of str2[]. m is 
// length of str1 and n is length of str2 
bool isSubSequence(char str1[], char str2[], int m, int n) 
{ 
    // Base Cases 
    if (m == 0) return true; 
    if (n == 0) return false; 
  
    // If last characters of two strings are matching 
    if (str1[m-1] == str2[n-1]) 
        return isSubSequence(str1, str2, m-1, n-1); 
  
    // If last characters are not matching 
    return isSubSequence(str1, str2, m, n-1); 
} 
  
// Driver program to test methods of graph class 
int main() 
{ 
    char str1[] = "gksrek"; 
    char str2[] = "geeksforgeeks"; 
    int m = strlen(str1); 
    int n = strlen(str2); 
    isSubSequence(str1, str2, m, n)? cout << "Yes ": 
                                     cout << "No"; 
    return 0; 
} 

Question 10.
    #include<iostream>
     using namespace std;
     //main function
     void revString(char *s)
     { 
     // WRITE YOUR CODE HERE
     for(int i=0;i<=4;i++){cout<<s[4-i];
                           }
      }
     int main()
     {
      char s[10] = "abcde";
      revString(s);  // call the function
      return 0;
      }




